{"version":3,"file":"static/js/693.59059cfe.chunk.js","mappings":"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","sources":["pages/Reviews/Reviews.styled.js","pages/Reviews/Reviews.jsx","service/api.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const StyledReviewsList = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n\n  & .review__card {\n    display: flex;\n    flex-direction: column;\n    gap: 10px;\n    padding: 20px;\n    border: ${props => props.theme.borders.normal}\n      ${props => props.theme.colors.accentSecondary};\n    border-radius: 10px;\n\n    & .highlight {\n      font-weight: bold;\n      color: ${props => props.theme.colors.accentPrimary};\n    }\n\n    & .readMore {\n      padding: 1px 6px;\n      margin-left: 6px;\n      border: ${props => props.theme.borders.normal} gray;\n      border-radius: ${props => props.theme.radii.normal};\n    }\n  }\n`;\n","import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { toast, Toaster } from 'react-hot-toast';\nimport { useTranslation } from 'react-i18next';\n\nimport { getMovieReviews } from 'service/api';\nimport { Loader } from 'components/index';\n\nimport { StyledReviewsList } from './Reviews.styled';\n\nconst Reviews = () => {\n  const { t } = useTranslation();\n\n  const [movieReviews, setMovieReviews] = useState([]);\n  const [commentStates, setCommentStates] = useState({});\n\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    (async function () {\n      try {\n        setIsLoading(true);\n\n        const movieReviews = await getMovieReviews(movieId);\n\n        setMovieReviews(movieReviews);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    })();\n  }, [movieId]);\n\n  useEffect(() => {\n    if (error) {\n      toast.error(error);\n      setError(null);\n    }\n  }, [error]);\n\n  const formatText = inputText => {\n    // Заміна ** на жирне форматування\n    const boldText = inputText.replace(/\\*\\*(.*?)\\*\\*/g, '<strong>$1</strong>');\n    // Заміна _ на курсивне форматування\n    const formattedText = boldText.replace(/_(.*?)_/g, '<em>$1</em>');\n    // Заміна посилань в форматі <a href=\"\"></a>\n    const linkedText = formattedText.replace(\n      /<a href=\"(.*?)\">(.*?)<\\/a>/g,\n      '<a href=\"$1\" target=\"_blank\" rel=\"noopener noreferrer\">$2</a>'\n    );\n\n    return { __html: linkedText };\n  };\n\n  const toggleComment = commentId => {\n    setCommentStates(prevState => ({\n      ...prevState,\n      [commentId]: !prevState[commentId],\n    }));\n  };\n\n  return (\n    <div style={{ paddingTop: '40px' }}>\n      {isLoading && <Loader />}\n\n      {!isLoading && !error && !movieReviews.length && (\n        <p\n          style={{\n            textAlign: 'center',\n          }}\n        >\n          {t('reviewsNoReviews')}\n        </p>\n      )}\n\n      {Boolean(movieReviews.length) && (\n        <StyledReviewsList>\n          {movieReviews.map(review => {\n            const { id, author, content } = review;\n            const isExpanded = commentStates[id] || false;\n\n            return (\n              <li key={author} className=\"review__card\">\n                <p>\n                  <span className=\"highlight\">{t('reviewsAuthor')}: </span>\n                  {author}\n                </p>\n                <p>\n                  <span className=\"highlight\">{t('reviewsContent')}: </span>\n\n                  <span\n                    dangerouslySetInnerHTML={\n                      isExpanded\n                        ? formatText(content)\n                        : formatText(content.slice(0, 500) + '...')\n                    }\n                  ></span>\n\n                  {content.length > 500 && (\n                    <button\n                      className=\"readMore\"\n                      onClick={() => toggleComment(id)}\n                    >\n                      {isExpanded\n                        ? t('reviewsCollapseContent')\n                        : t('reviewsReadMore')}\n                    </button>\n                  )}\n                </p>\n              </li>\n            );\n          })}\n        </StyledReviewsList>\n      )}\n\n      <Toaster />\n    </div>\n  );\n};\n\nexport default Reviews;\n","import axios from 'axios';\nimport defaultImg from 'images/no-img.jpg';\n\nconst { REACT_APP_API_KEY, REACT_APP_BASE_URL, REACT_APP_BASE_URL_IMAGE } =\n  process.env;\n\nconst API_KEY = REACT_APP_API_KEY;\nconst BASE_URL_IMAGE = REACT_APP_BASE_URL_IMAGE;\naxios.defaults.baseURL = REACT_APP_BASE_URL;\n\nconst getTrending = async currentPage => {\n  const params = {\n    api_key: API_KEY,\n    page: currentPage,\n  };\n\n  if (localStorage.getItem('language') === 'ua') {\n    params.language = 'uk-UA';\n  }\n\n  const { data } = await axios.get('/trending/movie/day', {\n    params,\n  });\n\n  const results = data.results.map(({ id, title, poster_path }) => ({\n    id,\n    title,\n    poster_path: getImagePath(poster_path),\n  }));\n\n  data.results = results;\n  if (data.total_pages > 500) data.total_pages = 500;\n\n  return data;\n};\n\nconst searchMoviesByQuery = async ({ query, currentPage }) => {\n  const params = {\n    api_key: API_KEY,\n    query,\n    page: currentPage,\n  };\n\n  if (localStorage.getItem('language') === 'ua') {\n    params.language = 'uk-UA';\n  }\n\n  const { data } = await axios.get('/search/movie', { params });\n\n  const results = data.results.map(({ id, title, poster_path }) => ({\n    id,\n    title,\n    poster_path: getImagePath(poster_path),\n  }));\n\n  data.results = results;\n  if (data.total_pages > 500) data.total_pages = 500;\n\n  return data;\n};\n\nconst getMovieDetails = async movieId => {\n  const params = {\n    api_key: API_KEY,\n    append_to_response: 'videos',\n  };\n\n  if (localStorage.getItem('language') === 'ua') {\n    params.language = 'uk-UA';\n  }\n\n  const { data } = await axios.get(`/movie/${movieId}`, {\n    params,\n  });\n\n  const {\n    poster_path,\n    title,\n    tagline,\n    adult,\n    release_date,\n    vote_average,\n    overview,\n    genres,\n    production_countries,\n    videos,\n  } = data;\n\n  const filteredVideos = videos.results.filter(\n    video => video.official === true\n  );\n\n  const newData = {\n    poster_path: getImagePath(poster_path),\n    title,\n    tagline,\n    adult,\n    release_date: new Date(release_date).getFullYear(),\n    vote_average: vote_average.toFixed(1),\n    overview,\n    genres: genres.map(genre => genre.name).join(', '),\n    production_countries: production_countries\n      .map(country => country.name)\n      .join(', '),\n    videos: filteredVideos,\n  };\n\n  return newData;\n};\n\nconst getMovieCredits = async movieId => {\n  const params = {\n    api_key: API_KEY,\n  };\n\n  if (localStorage.getItem('language') === 'ua') {\n    params.language = 'uk-UA';\n  }\n\n  const { data } = await axios.get(`/movie/${movieId}/credits`, { params });\n\n  const cast = data.cast.map(({ profile_path, character, name }) => ({\n    profile_path: getImagePath(profile_path),\n    character,\n    name,\n  }));\n\n  return cast;\n};\n\nconst getMovieReviews = async movieId => {\n  const params = {\n    api_key: API_KEY,\n  };\n\n  const { data } = await axios.get(`/movie/${movieId}/reviews`, { params });\n\n  const uniqueReviews = data.results.filter(\n    (review, idx, self) =>\n      idx === self.findIndex(r => r.content === review.content)\n  );\n\n  const reviews = uniqueReviews.map(({ id, author, content }) => ({\n    id,\n    author,\n    content,\n  }));\n\n  return reviews;\n};\n\nconst getImagePath = file_path => {\n  return file_path ? `${BASE_URL_IMAGE}${file_path}` : defaultImg;\n};\n\n// const getFilmVideos = async movieId => {\n//   const params = {\n//     api_key: API_KEY,\n//     language: localStorage.getItem('language') === 'ua' ? 'uk-UA' : 'en-US',\n//   };\n//\n//   const { results } = await axios.get(`/movie/${movieId}/videos`, { params });\n//\n//   return results;\n// };\n\nexport {\n  getTrending,\n  searchMoviesByQuery,\n  getMovieDetails,\n  getMovieCredits,\n  getMovieReviews,\n};\n"],"names":["StyledReviewsList","styled","props","theme","borders","normal","colors","accentSecondary","accentPrimary","radii","t","useTranslation","useState","movieReviews","setMovieReviews","commentStates","setCommentStates","isLoading","setIsLoading","error","setError","movieId","useParams","useEffect","getMovieReviews","message","toast","formatText","inputText","__html","replace","style","paddingTop","length","textAlign","Boolean","map","review","id","author","content","isExpanded","className","dangerouslySetInnerHTML","slice","onClick","commentId","prevState","REACT_APP_BASE_URL","process","API_KEY","BASE_URL_IMAGE","axios","getTrending","currentPage","params","api_key","page","localStorage","getItem","language","data","results","title","poster_path","getImagePath","total_pages","searchMoviesByQuery","query","getMovieDetails","append_to_response","tagline","adult","release_date","vote_average","overview","genres","production_countries","videos","filteredVideos","filter","video","official","newData","Date","getFullYear","toFixed","genre","name","join","country","getMovieCredits","cast","profile_path","character","uniqueReviews","idx","self","findIndex","r","reviews","file_path","defaultImg"],"sourceRoot":""}