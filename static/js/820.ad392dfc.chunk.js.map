{"version":3,"file":"static/js/820.ad392dfc.chunk.js","mappings":"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","sources":["components/MoviesList/MoviesList.styled.js","pages/Home/HomePage.jsx","service/api.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const MoviesListStyled = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 20px;\n`;\n","import { useEffect, useState } from 'react';\nimport { toast, Toaster } from 'react-hot-toast';\n\nimport { getTrending } from 'service/api';\nimport { Loader, MovieListItem } from 'components/index';\n\nimport { StyledSection } from 'components/Section/Section.styled';\nimport { StyledContainer } from 'components/Container/Container.styled';\nimport { MoviesListStyled } from 'components/MoviesList/MoviesList.styled';\n\nconst HomePage = () => {\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    (async function () {\n      try {\n        setIsLoading(true);\n\n        const trendMovies = await getTrending();\n\n        setMovies(trendMovies);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    })();\n  }, []);\n\n  useEffect(() => {\n    if (error) {\n      toast.error(error);\n      setError(null);\n    }\n  }, [error]);\n\n  return (\n    <>\n      {isLoading && <Loader />}\n\n      <StyledSection>\n        <StyledContainer>\n          <h1 style={{ marginBottom: '40px' }}>Today's trending movies</h1>\n\n          {Boolean(movies.length) && (\n            <MoviesListStyled>\n              {Boolean(movies.length > 0) &&\n                movies.map(movie => {\n                  return <MovieListItem {...movie} key={movie.id} />;\n                })}\n            </MoviesListStyled>\n          )}\n        </StyledContainer>\n      </StyledSection>\n\n      <Toaster />\n    </>\n  );\n};\n\nexport default HomePage;\n","import axios from 'axios';\nimport defaultImg from 'images/no-img.jpg';\n\nconst API_KEY = 'dea82e5d25cc68048d98e1915bc0a2dc';\nconst BASE_URL_IMAGE = 'https://image.tmdb.org/t/p/original';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nconst getTrending = async () => {\n  const params = {\n    api_key: API_KEY,\n  };\n\n  const { data } = await axios.get('/trending/movie/day', {\n    params,\n  });\n\n  const results = data.results.map(({ id, title, poster_path }) => ({\n    id,\n    title,\n    poster_path: getImagePath(poster_path),\n  }));\n\n  return results;\n};\n\nconst searchMoviesByQuery = async query => {\n  const params = {\n    api_key: API_KEY,\n    query,\n  };\n\n  const { data } = await axios.get('/search/movie', { params });\n\n  const results = data.results.map(({ id, title, poster_path }) => ({\n    id,\n    title,\n    poster_path: getImagePath(poster_path),\n  }));\n\n  return results;\n};\n\nconst getMovieDetails = async movieId => {\n  const params = {\n    api_key: API_KEY,\n  };\n\n  const { data } = await axios.get(`/movie/${movieId}`, {\n    params,\n  });\n\n  const {\n    poster_path,\n    title,\n    tagline,\n    adult,\n    release_date,\n    vote_average,\n    overview,\n    genres,\n    production_countries,\n  } = data;\n\n  return {\n    poster_path: getImagePath(poster_path),\n    title,\n    tagline,\n    adult,\n    release_date: new Date(release_date).getFullYear(),\n    vote_average: vote_average.toFixed(1),\n    overview,\n    genres: genres.map(genre => genre.name).join(', '),\n    production_countries: production_countries\n      .map(country => country.name)\n      .join(', '),\n  };\n};\n\nconst getMovieCredits = async movieId => {\n  const params = {\n    api_key: API_KEY,\n  };\n\n  const { data } = await axios.get(`/movie/${movieId}/credits`, { params });\n\n  const cast = data.cast.map(({ profile_path, character, name }) => ({\n    profile_path: getImagePath(profile_path),\n    character,\n    name,\n  }));\n\n  return cast;\n};\n\nconst getMovieReviews = async movieId => {\n  const params = {\n    api_key: API_KEY,\n  };\n\n  const { data } = await axios.get(`/movie/${movieId}/reviews`, { params });\n\n  const reviews = data.results.map(({ author, content }) => ({\n    author,\n    content,\n  }));\n\n  return reviews;\n};\n\nconst getImagePath = file_path => {\n  return file_path ? `${BASE_URL_IMAGE}${file_path}` : defaultImg;\n};\n\nexport {\n  getTrending,\n  searchMoviesByQuery,\n  getMovieDetails,\n  getMovieCredits,\n  getMovieReviews,\n};\n"],"names":["MoviesListStyled","styled","useState","movies","setMovies","isLoading","setIsLoading","error","setError","useEffect","getTrending","trendMovies","message","toast","style","marginBottom","Boolean","length","map","movie","key","id","API_KEY","axios","params","api_key","data","results","title","poster_path","getImagePath","searchMoviesByQuery","query","getMovieDetails","movieId","tagline","adult","release_date","vote_average","overview","genres","production_countries","Date","getFullYear","toFixed","genre","name","join","country","getMovieCredits","cast","profile_path","character","getMovieReviews","reviews","author","content","file_path","defaultImg"],"sourceRoot":""}