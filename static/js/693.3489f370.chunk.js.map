{"version":3,"file":"static/js/693.3489f370.chunk.js","mappings":"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","sources":["pages/Reviews/Reviews.styled.js","pages/Reviews/Reviews.jsx","service/api.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const StyledReviewsList = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n\n  & .review__card {\n    padding: 20px;\n    border: 1px solid #ffde59;\n    border-radius: 10px;\n  }\n`;\n","import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { toast, Toaster } from 'react-hot-toast';\n\nimport { getMovieReviews } from 'service/api';\nimport { Loader } from 'components/index';\n\nimport { StyledReviewsList } from './Reviews.styled';\n\nconst Reviews = () => {\n  const [movieReviews, setMovieReviews] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    (async function () {\n      try {\n        setIsLoading(true);\n\n        const movieReviews = await getMovieReviews(movieId);\n\n        setMovieReviews(movieReviews);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    })();\n  }, [movieId]);\n\n  useEffect(() => {\n    if (error) {\n      toast.error(error);\n      setError(null);\n    }\n  }, [error]);\n\n  return (\n    <>\n      {isLoading && <Loader />}\n\n      {!isLoading && !error && !movieReviews.length && (\n        <p\n          style={{\n            textAlign: 'center',\n          }}\n        >\n          No reviews yet\n        </p>\n      )}\n\n      {Boolean(movieReviews.length) && (\n        <StyledReviewsList>\n          {movieReviews.map(review => {\n            const { author, content } = review;\n            return (\n              <li key={author} className=\"review__card\">\n                <p>\n                  <b>Author:</b> {author}\n                </p>\n                <p>\n                  <b>Content:</b> {content}\n                </p>\n              </li>\n            );\n          })}\n        </StyledReviewsList>\n      )}\n\n      <Toaster />\n    </>\n  );\n};\n\nexport default Reviews;\n","import axios from 'axios';\nimport defaultImg from 'images/no-img.jpg';\n\nconst API_KEY = 'dea82e5d25cc68048d98e1915bc0a2dc';\nconst BASE_URL_IMAGE = 'https://image.tmdb.org/t/p/original';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nconst getTrending = async () => {\n  const params = {\n    api_key: API_KEY,\n  };\n\n  const { data } = await axios.get('/trending/movie/day', {\n    params,\n  });\n\n  const results = data.results.map(({ id, title, poster_path }) => ({\n    id,\n    title,\n    poster_path: getImagePath(poster_path),\n  }));\n\n  return results;\n};\n\nconst searchMoviesByQuery = async query => {\n  const params = {\n    api_key: API_KEY,\n    query,\n  };\n\n  const { data } = await axios.get('/search/movie', { params });\n\n  const results = data.results.map(({ id, title, poster_path }) => ({\n    id,\n    title,\n    poster_path: getImagePath(poster_path),\n  }));\n\n  return results;\n};\n\nconst getMovieDetails = async movieId => {\n  const params = {\n    api_key: API_KEY,\n  };\n\n  const { data } = await axios.get(`/movie/${movieId}`, {\n    params,\n  });\n\n  const {\n    poster_path,\n    title,\n    tagline,\n    adult,\n    release_date,\n    vote_average,\n    overview,\n    genres,\n    production_countries,\n  } = data;\n\n  return {\n    poster_path: getImagePath(poster_path),\n    title,\n    tagline,\n    adult,\n    release_date: new Date(release_date).getFullYear(),\n    vote_average: vote_average.toFixed(1),\n    overview,\n    genres: genres.map(genre => genre.name).join(', '),\n    production_countries: production_countries\n      .map(country => country.name)\n      .join(', '),\n  };\n};\n\nconst getMovieCredits = async movieId => {\n  const params = {\n    api_key: API_KEY,\n  };\n\n  const { data } = await axios.get(`/movie/${movieId}/credits`, { params });\n\n  const cast = data.cast.map(({ profile_path, character, name }) => ({\n    profile_path: getImagePath(profile_path),\n    character,\n    name,\n  }));\n\n  return cast;\n};\n\nconst getMovieReviews = async movieId => {\n  const params = {\n    api_key: API_KEY,\n  };\n\n  const { data } = await axios.get(`/movie/${movieId}/reviews`, { params });\n\n  const reviews = data.results.map(({ author, content }) => ({\n    author,\n    content,\n  }));\n\n  return reviews;\n};\n\nconst getImagePath = file_path => {\n  return file_path ? `${BASE_URL_IMAGE}${file_path}` : defaultImg;\n};\n\nexport {\n  getTrending,\n  searchMoviesByQuery,\n  getMovieDetails,\n  getMovieCredits,\n  getMovieReviews,\n};\n"],"names":["StyledReviewsList","styled","useState","movieReviews","setMovieReviews","isLoading","setIsLoading","error","setError","movieId","useParams","useEffect","getMovieReviews","message","toast","length","style","textAlign","Boolean","map","review","author","content","className","API_KEY","axios","getTrending","params","api_key","data","results","id","title","poster_path","getImagePath","searchMoviesByQuery","query","getMovieDetails","tagline","adult","release_date","vote_average","overview","genres","production_countries","Date","getFullYear","toFixed","genre","name","join","country","getMovieCredits","cast","profile_path","character","reviews","file_path","defaultImg"],"sourceRoot":""}