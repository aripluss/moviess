{"version":3,"file":"static/js/328.ebeb01a3.chunk.js","mappings":"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","sources":["pages/Cast/Cast.styled.js","pages/Cast/Cast.jsx","service/api.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const StyledCastList = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 20px;\n\n  & .cast__card {\n    width: calc((100% - 20px) / 2);\n    height: auto;\n    border-radius: ${props => props.theme.radii.medium};\n\n    @media screen and (min-width: 768px) {\n      width: calc((100% - 60px) / 4);\n    }\n\n    @media screen and (min-width: 1280px) {\n      width: calc((100% - 100px) / 6);\n    }\n  }\n\n  & .cast__poster {\n    width: 100%;\n    height: 250px;\n    object-fit: cover;\n    border-radius: ${props => props.theme.radii.medium};\n  }\n`;\n","import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { toast, Toaster } from 'react-hot-toast';\nimport { useTranslation } from 'react-i18next';\n\nimport { getMovieCredits } from 'service/api';\nimport { Loader } from 'components/index';\n\nimport { StyledCastList } from './Cast.styled';\n\nconst Cast = () => {\n  const { t } = useTranslation();\n\n  const [movieCast, setMovieCast] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    (async function () {\n      try {\n        setIsLoading(true);\n\n        const movieCast = await getMovieCredits(movieId);\n\n        setMovieCast(movieCast);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    })();\n  }, [movieId]);\n\n  useEffect(() => {\n    if (error) {\n      toast.error(error);\n      setError(null);\n    }\n  }, [error]);\n\n  return (\n    <>\n      {isLoading && <Loader />}\n\n      {!isLoading && !error && !movieCast.length && (\n        <p\n          style={{\n            textAlign: 'center',\n          }}\n        >\n          {t('сastNoInformation')}\n        </p>\n      )}\n\n      {Boolean(movieCast.length) && (\n        <StyledCastList>\n          {movieCast.map(castMember => {\n            const { profile_path, character, name } = castMember;\n            return (\n              <li className=\"cast__card\" key={name}>\n                <img\n                  className=\"cast__poster\"\n                  src={profile_path}\n                  alt={name}\n                  loading=\"lazy\"\n                />\n                <p>\n                  <b>{t('сastCharacter')}:</b> {character}\n                </p>\n                <p>\n                  <b>{t('сastName')}:</b> {name}\n                </p>\n              </li>\n            );\n          })}\n        </StyledCastList>\n      )}\n\n      <Toaster />\n    </>\n  );\n};\n\nexport default Cast;\n","import axios from 'axios';\nimport defaultImg from 'images/no-img.jpg';\n\nconst { REACT_APP_API_KEY, REACT_APP_BASE_URL, REACT_APP_BASE_URL_IMAGE } =\n  process.env;\n\nconsole.log(\n  '1',\n  REACT_APP_API_KEY,\n  '2',\n  REACT_APP_BASE_URL,\n  '3',\n  REACT_APP_BASE_URL_IMAGE\n);\n\nconst API_KEY = REACT_APP_API_KEY;\nconst BASE_URL_IMAGE = REACT_APP_BASE_URL_IMAGE;\naxios.defaults.baseURL = REACT_APP_BASE_URL;\n\nconst getTrending = async currentPage => {\n  const params = {\n    api_key: API_KEY,\n    page: currentPage,\n  };\n\n  const { data } = await axios.get('/trending/movie/day', {\n    params,\n  });\n\n  const results = data.results.map(({ id, title, poster_path }) => ({\n    id,\n    title,\n    poster_path: getImagePath(poster_path),\n  }));\n\n  data.results = results;\n  if (data.total_pages > 500) data.total_pages = 500;\n\n  return data;\n};\n\nconst searchMoviesByQuery = async ({ query, currentPage }) => {\n  const params = {\n    api_key: API_KEY,\n    query,\n    page: currentPage,\n  };\n\n  const { data } = await axios.get('/search/movie', { params });\n\n  const results = data.results.map(({ id, title, poster_path }) => ({\n    id,\n    title,\n    poster_path: getImagePath(poster_path),\n  }));\n\n  data.results = results;\n  if (data.total_pages > 500) data.total_pages = 500;\n\n  return data;\n};\n\nconst getMovieDetails = async movieId => {\n  const params = {\n    api_key: API_KEY,\n  };\n\n  const { data } = await axios.get(`/movie/${movieId}`, {\n    params,\n  });\n\n  const {\n    poster_path,\n    title,\n    tagline,\n    adult,\n    release_date,\n    vote_average,\n    overview,\n    genres,\n    production_countries,\n  } = data;\n\n  return {\n    poster_path: getImagePath(poster_path),\n    title,\n    tagline,\n    adult,\n    release_date: new Date(release_date).getFullYear(),\n    vote_average: vote_average.toFixed(1),\n    overview,\n    genres: genres.map(genre => genre.name).join(', '),\n    production_countries: production_countries\n      .map(country => country.name)\n      .join(', '),\n  };\n};\n\nconst getMovieCredits = async movieId => {\n  const params = {\n    api_key: API_KEY,\n  };\n\n  const { data } = await axios.get(`/movie/${movieId}/credits`, { params });\n\n  const cast = data.cast.map(({ profile_path, character, name }) => ({\n    profile_path: getImagePath(profile_path),\n    character,\n    name,\n  }));\n\n  return cast;\n};\n\nconst getMovieReviews = async movieId => {\n  const params = {\n    api_key: API_KEY,\n  };\n\n  const { data } = await axios.get(`/movie/${movieId}/reviews`, { params });\n\n  const reviews = data.results.map(({ author, content }) => ({\n    author,\n    content,\n  }));\n\n  return reviews;\n};\n\nconst getImagePath = file_path => {\n  return file_path ? `${BASE_URL_IMAGE}${file_path}` : defaultImg;\n};\n\nexport {\n  getTrending,\n  searchMoviesByQuery,\n  getMovieDetails,\n  getMovieCredits,\n  getMovieReviews,\n};\n"],"names":["StyledCastList","styled","props","theme","radii","medium","t","useTranslation","useState","movieCast","setMovieCast","isLoading","setIsLoading","error","setError","movieId","useParams","useEffect","getMovieCredits","message","toast","length","style","textAlign","Boolean","map","castMember","profile_path","character","name","className","src","alt","loading","REACT_APP_API_KEY","process","REACT_APP_BASE_URL","REACT_APP_BASE_URL_IMAGE","console","log","API_KEY","BASE_URL_IMAGE","axios","getTrending","currentPage","params","api_key","page","data","results","id","title","poster_path","getImagePath","total_pages","searchMoviesByQuery","query","getMovieDetails","tagline","adult","release_date","vote_average","overview","genres","production_countries","Date","getFullYear","toFixed","genre","join","country","cast","getMovieReviews","reviews","author","content","file_path","defaultImg"],"sourceRoot":""}