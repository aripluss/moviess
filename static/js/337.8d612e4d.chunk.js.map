{"version":3,"file":"static/js/337.8d612e4d.chunk.js","mappings":"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","sources":["components/MoviesList/MoviesList.styled.js","pages/Movies/MoviesPage.jsx","service/api.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const MoviesListStyled = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 20px;\n`;\n","import React, { useEffect, useState } from 'react';\nimport { useLocation, useSearchParams } from 'react-router-dom';\nimport { toast, Toaster } from 'react-hot-toast';\nimport ResponsivePagination from 'react-responsive-pagination';\nimport 'react-responsive-pagination/themes/classic.css';\nimport { useTranslation } from 'react-i18next';\n\nimport { searchMoviesByQuery } from 'service/api';\nimport { Loader, MovieListItem, SearchForm } from 'components/index';\n\nimport { StyledSection } from 'components/Section/Section.styled';\nimport { StyledContainer } from 'components/Container/Container.styled';\nimport { MoviesListStyled } from 'components/MoviesList/MoviesList.styled';\n\nconst MoviesPage = () => {\n  const { i18n, t } = useTranslation();\n  const location = useLocation();\n\n  const [movies, setMovies] = useState([]);\n  const [totalPages, setTotalPages] = useState(1);\n  const [currentPage, setCurrentPage] = useState(\n    location.state?.currentPage || 1\n  );\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [isSubmitted, setIsSubmitted] = useState(false);\n\n  const [searchParams, setSearchParams] = useSearchParams();\n  const searchQuery = searchParams.get('query');\n\n  useEffect(() => {\n    if (!searchQuery || searchQuery === '') return;\n\n    (async () => {\n      try {\n        setIsLoading(true);\n\n        const queryData = { query: searchQuery, currentPage };\n\n        const moviesByQuery = await searchMoviesByQuery(queryData);\n\n        if (!moviesByQuery.results.length) {\n          setError(t('toast.noMoviesFound'));\n          setMovies([]);\n          return;\n        }\n\n        if (currentPage === 1 && isSubmitted) {\n          const toastMessage = t('toast.moviesFound', {\n            count: moviesByQuery.total_results,\n          });\n          toast.success(toastMessage);\n          setIsSubmitted(false);\n        }\n\n        setMovies(moviesByQuery.results);\n        setTotalPages(moviesByQuery.total_pages);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    })();\n  }, [currentPage, searchQuery, isSubmitted, i18n.language, t]);\n\n  useEffect(() => {\n    if (error) {\n      toast.error(error);\n      setError(null);\n    }\n  }, [error]);\n\n  const onSubmit = searchValue => {\n    setSearchParams({ query: searchValue });\n    setCurrentPage(1);\n    setIsSubmitted(true);\n  };\n\n  function handlePageChange(page) {\n    setCurrentPage(page);\n\n    // Scroll to the top of the page\n    window.scrollTo({ top: 0, behavior: 'smooth' });\n  }\n\n  return (\n    <>\n      {isLoading && <Loader />}\n\n      <StyledSection style={{ paddingBottom: '0' }}>\n        <StyledContainer>\n          <SearchForm defaultValue={searchQuery} onSubmit={onSubmit} />\n        </StyledContainer>\n      </StyledSection>\n\n      <StyledSection style={{ flexGrow: 1 }}>\n        <StyledContainer>\n          {!isLoading && !error && !movies.length && (\n            <p style={{ textAlign: 'center' }}>{t('moviesPageNoMovies')} </p>\n          )}\n\n          {Boolean(movies.length) && (\n            <>\n              <MoviesListStyled style={{ marginBottom: 40 }}>\n                {movies.map(movie => {\n                  return (\n                    <MovieListItem\n                      location={location}\n                      {...movie}\n                      key={movie.id}\n                      currentPage={currentPage}\n                    />\n                  );\n                })}\n              </MoviesListStyled>\n\n              <ResponsivePagination\n                total={totalPages}\n                current={currentPage}\n                onPageChange={page => handlePageChange(page)}\n              />\n            </>\n          )}\n        </StyledContainer>\n      </StyledSection>\n\n      <Toaster />\n    </>\n  );\n};\n\nexport default MoviesPage;\n","import axios from 'axios';\nimport defaultImg from 'images/no-img.jpg';\n\nconst { REACT_APP_API_KEY, REACT_APP_BASE_URL, REACT_APP_BASE_URL_IMAGE } =\n  process.env;\n\nconst API_KEY = REACT_APP_API_KEY;\nconst BASE_URL_IMAGE = REACT_APP_BASE_URL_IMAGE;\naxios.defaults.baseURL = REACT_APP_BASE_URL;\n\nconst getTrending = async currentPage => {\n  const params = {\n    api_key: API_KEY,\n    page: currentPage,\n  };\n\n  if (localStorage.getItem('language') === 'ua') {\n    params.language = 'uk-UA';\n  }\n\n  const { data } = await axios.get('/trending/movie/day', {\n    params,\n  });\n\n  const results = data.results.map(({ id, title, poster_path }) => ({\n    id,\n    title,\n    poster_path: getImagePath(poster_path),\n  }));\n\n  data.results = results;\n  if (data.total_pages > 500) data.total_pages = 500;\n\n  return data;\n};\n\nconst searchMoviesByQuery = async ({ query, currentPage }) => {\n  const params = {\n    api_key: API_KEY,\n    query,\n    page: currentPage,\n  };\n\n  if (localStorage.getItem('language') === 'ua') {\n    params.language = 'uk-UA';\n  }\n\n  const { data } = await axios.get('/search/movie', { params });\n\n  const results = data.results.map(({ id, title, poster_path }) => ({\n    id,\n    title,\n    poster_path: getImagePath(poster_path),\n  }));\n\n  data.results = results;\n  if (data.total_pages > 500) data.total_pages = 500;\n\n  return data;\n};\n\nconst getMovieDetails = async movieId => {\n  const params = {\n    api_key: API_KEY,\n    append_to_response: 'videos',\n  };\n\n  if (localStorage.getItem('language') === 'ua') {\n    params.language = 'uk-UA';\n  }\n\n  const { data } = await axios.get(`/movie/${movieId}`, {\n    params,\n  });\n\n  const {\n    poster_path,\n    title,\n    tagline,\n    adult,\n    release_date,\n    vote_average,\n    overview,\n    genres,\n    production_countries,\n    videos,\n  } = data;\n\n  const filteredVideos = videos.results.filter(\n    video => video.official === true\n  );\n\n  const newData = {\n    poster_path: getImagePath(poster_path),\n    title,\n    tagline,\n    adult,\n    release_date: new Date(release_date).getFullYear(),\n    vote_average: vote_average.toFixed(1),\n    overview,\n    genres: genres.map(genre => genre.name).join(', '),\n    production_countries: production_countries\n      .map(country => country.name)\n      .join(', '),\n    videos: filteredVideos,\n  };\n\n  return newData;\n};\n\nconst getMovieCredits = async movieId => {\n  const params = {\n    api_key: API_KEY,\n  };\n\n  if (localStorage.getItem('language') === 'ua') {\n    params.language = 'uk-UA';\n  }\n\n  const { data } = await axios.get(`/movie/${movieId}/credits`, { params });\n\n  const cast = data.cast.map(({ profile_path, character, name }) => ({\n    profile_path: getImagePath(profile_path),\n    character,\n    name,\n  }));\n\n  return cast;\n};\n\nconst getMovieReviews = async movieId => {\n  const params = {\n    api_key: API_KEY,\n  };\n\n  const { data } = await axios.get(`/movie/${movieId}/reviews`, { params });\n\n  const uniqueReviews = data.results.filter(\n    (review, idx, self) =>\n      idx === self.findIndex(r => r.content === review.content)\n  );\n\n  const reviews = uniqueReviews.map(({ id, author, content }) => ({\n    id,\n    author,\n    content,\n  }));\n\n  return reviews;\n};\n\nconst getImagePath = file_path => {\n  return file_path ? `${BASE_URL_IMAGE}${file_path}` : defaultImg;\n};\n\n// const getFilmVideos = async movieId => {\n//   const params = {\n//     api_key: API_KEY,\n//     language: localStorage.getItem('language') === 'ua' ? 'uk-UA' : 'en-US',\n//   };\n//\n//   const { results } = await axios.get(`/movie/${movieId}/videos`, { params });\n//\n//   return results;\n// };\n\nexport {\n  getTrending,\n  searchMoviesByQuery,\n  getMovieDetails,\n  getMovieCredits,\n  getMovieReviews,\n};\n"],"names":["MoviesListStyled","styled","useTranslation","i18n","t","location","useLocation","useState","movies","setMovies","totalPages","setTotalPages","state","currentPage","setCurrentPage","isLoading","setIsLoading","error","setError","isSubmitted","setIsSubmitted","useSearchParams","searchParams","setSearchParams","searchQuery","get","useEffect","queryData","query","searchMoviesByQuery","moviesByQuery","results","length","toastMessage","count","total_results","toast","total_pages","message","language","style","paddingBottom","defaultValue","onSubmit","searchValue","flexGrow","textAlign","Boolean","marginBottom","map","movie","key","id","total","current","onPageChange","page","window","scrollTo","top","behavior","handlePageChange","REACT_APP_BASE_URL","process","API_KEY","BASE_URL_IMAGE","axios","getTrending","params","api_key","localStorage","getItem","data","title","poster_path","getImagePath","getMovieDetails","movieId","append_to_response","tagline","adult","release_date","vote_average","overview","genres","production_countries","videos","filteredVideos","filter","video","official","newData","Date","getFullYear","toFixed","genre","name","join","country","getMovieCredits","cast","profile_path","character","getMovieReviews","uniqueReviews","review","idx","self","findIndex","r","content","reviews","author","file_path","defaultImg"],"sourceRoot":""}