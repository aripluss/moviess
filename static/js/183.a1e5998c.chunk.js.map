{"version":3,"file":"static/js/183.a1e5998c.chunk.js","mappings":"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","sources":["components/Trailer/Trailer.styled.js","components/Trailer/Trailer.jsx","pages/MovieDetails/MovieDetailsPage.styled.js","components/LinkButton/LinkButton.styled.js","pages/MovieDetails/MovieDetailsPage.jsx","service/api.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const StyledTrailerIframe = styled.iframe`\n  display: block;\n  width: 100%;\n  height: 180px;\n  margin: 0 auto 40px;\n  border-radius: ${props => props.theme.radii.medium};\n\n  @media screen and (min-width: ${({ theme }) => theme.breakpoints.md}) {\n    width: 614px;\n    height: 345px;\n  }\n`;\n","import { StyledTrailerIframe } from './Trailer.styled';\n\nexport const Trailer = ({ trailerLink }) => {\n  const BASE_TRAILER_URL = 'https://www.youtube.com/embed/';\n\n  return (\n    <StyledTrailerIframe\n      title=\"Movie Trailer\"\n      src={`${BASE_TRAILER_URL}${trailerLink}`}\n      frameBorder=\"0\"\n      allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n      allowFullScreen\n    ></StyledTrailerIframe>\n  );\n};\n","import styled from 'styled-components';\nimport { SelectStyled } from '../../components/Select/Select.styled';\n\nexport const StyledMovieDetailsContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n  margin-top: 40px;\n  margin-bottom: 40px;\n\n  @media screen and (min-width: ${({ theme }) => theme.breakpoints.md}) {\n    flex-direction: row;\n  }\n\n  .movie__poster {\n    width: 100%;\n    height: 100%;\n    border-radius: ${props => props.theme.radii.medium};\n\n    @media screen and (min-width: ${({ theme }) => theme.breakpoints.md}) {\n      width: 250px;\n    }\n\n    @media screen and (min-width: ${({ theme }) => theme.breakpoints.lg}) {\n      width: 300px;\n    }\n  }\n\n  .movie__content {\n    display: flex;\n    flex-direction: column;\n    gap: 10px;\n  }\n\n  & .movie__title-wrapper {\n    display: flex;\n    align-items: start;\n    justify-content: space-between;\n    gap: 20px;\n  }\n\n  & .movie__rating {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    background-color: ${props => props.theme.colors.accentSecondary};\n    color: #000;\n    border: ${props => props.theme.borders.normal}\n      ${props => props.theme.colors.accentSecondary};\n    border-radius: ${props => props.theme.radii.medium};\n    padding: 6px 12px;\n    font-weight: ${props => props.theme.fontWeights.medium};\n    box-shadow: 0 2px 6px rgb(0 0 0 / 10%);\n  }\n\n  & .movie__adult {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    border: ${props => props.theme.borders.normal} red;\n    color: red;\n    border-radius: ${props => props.theme.radii.medium};\n    padding: 6px 10px;\n    font-weight: ${props => props.theme.fontWeights.medium};\n    box-shadow: 0 2px 6px rgb(0 0 0 / 10%);\n  }\n`;\n\nexport const SelectTrailerStyled = styled(SelectStyled)`\n  & > select {\n    width: 100%;\n    margin: 0 auto 10px;\n\n    @media screen and (min-width: ${({ theme }) => theme.breakpoints.md}) {\n      width: 614px;\n    }\n  }\n`;\n","import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const LinkButton = styled(NavLink)`\n  padding: 10px;\n  text-align: center;\n  color: ${props => props.theme.colors.accentPrimary};\n  border: ${props => props.theme.borders.normal}\n    ${props => props.theme.colors.accentPrimary};\n  border-radius: ${props => props.theme.radii.medium};\n  transition: background-color ${props => props.theme.transition};\n\n  &:hover,\n  &:focus-visible {\n    background-color: ${props => props.theme.colors.accentPrimary};\n  }\n`;\n","import React, { useEffect, useState } from 'react';\nimport { Outlet, useLocation, useParams } from 'react-router-dom';\nimport { useTranslation } from 'react-i18next';\n\nimport { getMovieDetails } from 'service/api';\nimport { Loader } from 'components/index';\nimport { Trailer } from '../../components/Trailer/Trailer';\n\nimport {\n  SelectTrailerStyled,\n  StyledMovieDetailsContainer,\n} from './MovieDetailsPage.styled';\nimport { StyledSection } from 'components/Section/Section.styled';\nimport { StyledContainer } from 'components/Container/Container.styled';\nimport { LinkButton } from 'components/LinkButton/LinkButton.styled';\n\nconst MovieDetailsPage = () => {\n  const { i18n, t } = useTranslation();\n  const { movieId } = useParams();\n  const location = useLocation();\n\n  const [movieDetails, setMovieDetails] = useState([]);\n  const [movieTrailers, setMovieTrailers] = useState([]);\n  const [currentTrailerLink, setCurrentTrailerLink] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    if (!movieId) return;\n\n    (async function () {\n      try {\n        setIsLoading(true);\n\n        const movieDetails = await getMovieDetails(movieId);\n\n        setMovieDetails(movieDetails);\n        setMovieTrailers(movieDetails.videos);\n        setCurrentTrailerLink(movieDetails?.videos[0]?.key);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    })();\n  }, [movieId, i18n.language]);\n\n  useEffect(() => {\n    if (error) {\n      alert(error);\n    }\n  }, [error]);\n\n  const isCastVisible = location.pathname.includes('cast');\n  const isReviewsVisible = location.pathname.includes('reviews');\n\n  const {\n    poster_path,\n    title,\n    tagline,\n    adult,\n    release_date,\n    vote_average,\n    overview,\n    genres,\n    production_countries,\n  } = movieDetails;\n\n  return (\n    <>\n      {isLoading && <Loader />}\n      <StyledSection style={{ paddingBottom: '0' }}>\n        <StyledContainer>\n          <LinkButton\n            to={location.state?.from ?? '/'}\n            state={{ currentPage: location.state?.currentPage }}\n          >\n            {t('goBackBtn')}\n          </LinkButton>\n\n          {movieDetails && (\n            <>\n              <StyledMovieDetailsContainer>\n                <img\n                  className=\"movie__poster\"\n                  alt={`${title} poster`}\n                  src={poster_path}\n                  loading=\"lazy\"\n                />\n                <div className=\"movie__content\">\n                  <div className=\"movie__title-wrapper\">\n                    <h1>{title}</h1>\n                    {vote_average && (\n                      <div className=\"movie__rating\">{vote_average}</div>\n                    )}\n                    {adult && <div className=\"movie__adult\">18+</div>}\n                  </div>\n                  {tagline && <i>{tagline}</i>}\n                  {release_date && (\n                    <p>\n                      <b>{t('movieDetailsPageYear')}:</b>{' '}\n                      <span>{release_date}</span>\n                    </p>\n                  )}\n                  {genres && (\n                    <p>\n                      <b>{t('movieDetailsPageGenres')}:</b>{' '}\n                      <span>{genres}</span>\n                    </p>\n                  )}\n                  {production_countries && (\n                    <p>\n                      <b>{t('movieDetailsPageCountries')}:</b>{' '}\n                      <span>{production_countries}</span>\n                    </p>\n                  )}\n                  {overview && (\n                    <p>\n                      <b>{t('movieDetailsPageOverview')}:</b>{' '}\n                      <span>{overview}</span>\n                    </p>\n                  )}\n                </div>\n              </StyledMovieDetailsContainer>\n\n              {movieTrailers && movieTrailers.length > 0 && (\n                <>\n                  <SelectTrailerStyled>\n                    <select\n                      onChange={e => setCurrentTrailerLink(e.target.value)}\n                    >\n                      {movieTrailers.map(trailer => {\n                        return (\n                          <option value={trailer.key} key={trailer.key}>\n                            [{trailer.type}] {trailer.name}\n                          </option>\n                        );\n                      })}\n                    </select>\n                  </SelectTrailerStyled>\n                  {currentTrailerLink && (\n                    <Trailer trailerLink={currentTrailerLink} />\n                  )}\n                </>\n              )}\n            </>\n          )}\n\n          <nav\n            style={{ display: 'flex', justifyContent: 'center', gap: '20px' }}\n          >\n            <LinkButton\n              state={{\n                from: location.state?.from ?? '/',\n                currentPage: location.state?.currentPage,\n              }}\n              to={isCastVisible ? '' : 'cast'}\n            >\n              {isCastVisible\n                ? `${t('movieDetailsPageHideCast')}`\n                : `${t('movieDetailsPageShowCast')}`}\n            </LinkButton>\n\n            <LinkButton\n              state={{\n                from: location.state?.from ?? '/',\n                currentPage: location.state?.currentPage,\n              }}\n              to={isReviewsVisible ? '' : 'reviews'}\n            >\n              {isReviewsVisible\n                ? `${t('movieDetailsPageHideReviews')}`\n                : `${t('movieDetailsPageShowReviews')}`}\n            </LinkButton>\n          </nav>\n        </StyledContainer>\n      </StyledSection>\n\n      <StyledSection style={{ paddingTop: 0 }}>\n        <StyledContainer>\n          <Outlet />\n        </StyledContainer>\n      </StyledSection>\n    </>\n  );\n};\n\nexport default MovieDetailsPage;\n","import axios from 'axios';\nimport defaultImg from 'images/no-img.jpg';\n\nconst { REACT_APP_API_KEY, REACT_APP_BASE_URL, REACT_APP_BASE_URL_IMAGE } =\n  process.env;\n\nconst API_KEY = REACT_APP_API_KEY;\nconst BASE_URL_IMAGE = REACT_APP_BASE_URL_IMAGE;\naxios.defaults.baseURL = REACT_APP_BASE_URL;\n\nconst getTrending = async currentPage => {\n  const params = {\n    api_key: API_KEY,\n    page: currentPage,\n  };\n\n  if (localStorage.getItem('language') === 'ua') {\n    params.language = 'uk-UA';\n  }\n\n  const { data } = await axios.get('/trending/movie/day', {\n    params,\n  });\n\n  const results = data.results.map(({ id, title, poster_path }) => ({\n    id,\n    title,\n    poster_path: getImagePath(poster_path),\n  }));\n\n  data.results = results;\n  if (data.total_pages > 500) data.total_pages = 500;\n\n  return data;\n};\n\nconst searchMoviesByQuery = async ({ query, currentPage }) => {\n  const params = {\n    api_key: API_KEY,\n    query,\n    page: currentPage,\n  };\n\n  if (localStorage.getItem('language') === 'ua') {\n    params.language = 'uk-UA';\n  }\n\n  const { data } = await axios.get('/search/movie', { params });\n\n  const results = data.results.map(({ id, title, poster_path }) => ({\n    id,\n    title,\n    poster_path: getImagePath(poster_path),\n  }));\n\n  data.results = results;\n  if (data.total_pages > 500) data.total_pages = 500;\n\n  return data;\n};\n\nconst getMovieDetails = async movieId => {\n  const params = {\n    api_key: API_KEY,\n    append_to_response: 'videos',\n  };\n\n  if (localStorage.getItem('language') === 'ua') {\n    params.language = 'uk-UA';\n  }\n\n  const { data } = await axios.get(`/movie/${movieId}`, {\n    params,\n  });\n\n  const {\n    poster_path,\n    title,\n    tagline,\n    adult,\n    release_date,\n    vote_average,\n    overview,\n    genres,\n    production_countries,\n    videos,\n  } = data;\n\n  const filteredVideos = videos.results.filter(\n    video => video.official === true\n  );\n\n  const newData = {\n    poster_path: getImagePath(poster_path),\n    title,\n    tagline,\n    adult,\n    release_date: new Date(release_date).getFullYear(),\n    vote_average: vote_average.toFixed(1),\n    overview,\n    genres: genres.map(genre => genre.name).join(', '),\n    production_countries: production_countries\n      .map(country => country.name)\n      .join(', '),\n    videos: filteredVideos,\n  };\n\n  return newData;\n};\n\nconst getMovieCredits = async movieId => {\n  const params = {\n    api_key: API_KEY,\n  };\n\n  if (localStorage.getItem('language') === 'ua') {\n    params.language = 'uk-UA';\n  }\n\n  const { data } = await axios.get(`/movie/${movieId}/credits`, { params });\n\n  const cast = data.cast.map(({ profile_path, character, name }) => ({\n    profile_path: getImagePath(profile_path),\n    character,\n    name,\n  }));\n\n  return cast;\n};\n\nconst getMovieReviews = async movieId => {\n  const params = {\n    api_key: API_KEY,\n  };\n\n  const { data } = await axios.get(`/movie/${movieId}/reviews`, { params });\n\n  const uniqueReviews = data.results.filter(\n    (review, idx, self) =>\n      idx === self.findIndex(r => r.content === review.content)\n  );\n\n  const reviews = uniqueReviews.map(({ id, author, content }) => ({\n    id,\n    author,\n    content,\n  }));\n\n  return reviews;\n};\n\nconst getImagePath = file_path => {\n  return file_path ? `${BASE_URL_IMAGE}${file_path}` : defaultImg;\n};\n\n// const getFilmVideos = async movieId => {\n//   const params = {\n//     api_key: API_KEY,\n//     language: localStorage.getItem('language') === 'ua' ? 'uk-UA' : 'en-US',\n//   };\n//\n//   const { results } = await axios.get(`/movie/${movieId}/videos`, { params });\n//\n//   return results;\n// };\n\nexport {\n  getTrending,\n  searchMoviesByQuery,\n  getMovieDetails,\n  getMovieCredits,\n  getMovieReviews,\n};\n"],"names":["StyledTrailerIframe","styled","props","theme","radii","medium","breakpoints","md","Trailer","trailerLink","title","src","frameBorder","allow","allowFullScreen","StyledMovieDetailsContainer","lg","colors","accentSecondary","borders","normal","fontWeights","SelectTrailerStyled","SelectStyled","LinkButton","NavLink","accentPrimary","transition","useTranslation","i18n","t","movieId","useParams","location","useLocation","useState","movieDetails","setMovieDetails","movieTrailers","setMovieTrailers","currentTrailerLink","setCurrentTrailerLink","isLoading","setIsLoading","error","setError","useEffect","getMovieDetails","videos","key","message","language","alert","isCastVisible","pathname","includes","isReviewsVisible","poster_path","tagline","adult","release_date","vote_average","overview","genres","production_countries","style","paddingBottom","to","state","from","currentPage","className","alt","loading","length","onChange","e","target","value","map","trailer","type","name","display","justifyContent","gap","paddingTop","REACT_APP_BASE_URL","process","API_KEY","BASE_URL_IMAGE","axios","getTrending","params","api_key","page","localStorage","getItem","data","results","id","getImagePath","total_pages","searchMoviesByQuery","query","append_to_response","filteredVideos","filter","video","official","newData","Date","getFullYear","toFixed","genre","join","country","getMovieCredits","cast","profile_path","character","getMovieReviews","uniqueReviews","review","idx","self","findIndex","r","content","reviews","author","file_path","defaultImg"],"sourceRoot":""}